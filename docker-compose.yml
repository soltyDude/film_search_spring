version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty1234
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network

  eureka-server:
    build:
      context: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"  # Можно убрать позже, если хочешь закрыть доступ снаружи
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka-server:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: qwerty1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - app-network

  film-service:
    build:
      context: ./film-service
    container_name: film-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka-server:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/film_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: qwerty1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - app-network

  review-service:
    build:
      context: ./review-service
    container_name: review-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka-server:
        condition: service_started
    healthcheck:
      test: curl --fail http://localhost:8083/actuator/health || exit 1
      interval: 15s
      timeout: 3s
      retries: 5
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/reviewdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: qwerty1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - app-network

  playlist-service:
    build:
      context: ./playlist-service
    container_name: playlist-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      eureka-server:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/playlistdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: qwerty1234
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - app-network

  gateway:
    build:
      context: ./gateway-service
    container_name: gateway
    ports:
      - "8081:8081"
    depends_on:
      eureka-server:
        condition: service_started
      review-service:
        condition: service_started
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
